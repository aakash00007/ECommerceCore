@model IEnumerable<Product>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>


<p>
    <a class="btn btn-success" asp-action="AddProduct">Add Products</a>
</p>

<form asp-action="Index" asp-controller="Admin" method="GetAllProducts">
    <div class="d-flex justify-content-center mb-2">
        <input class="mx-2" type="search" name="search" value="@ViewBag.Search" placeholder="Enter title or category" />
        <input type="submit" value="Search" class="btn btn-dark" />
    </div>
</form>

<table class="table">


    @if (ViewData["Error"] != null)
    {
        <h1 class="text-center">@ViewData["Error"]</h1>
    }
    else
    {
        <thead>
            <tr>

                <th>
                    Product Name
                </th>
                <th>
                    Description
                </th>
                <th>
                    Product Price
                </th>
                <th>
                    Image
                </th>
                <th>
                    Quantity
                </th>
                <th>
                    Actions
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>

                    <td>
                        @Html.DisplayFor(modelItem => item.ProductName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Price)
                    </td>
                    <td>
                        <img src="@item.Image" width="50" height="50" alt="Product Image" />
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Quantity)
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "EditProduct", new { id=item.ProductId },new {@class="btn btn-primary"})
                        @Html.ActionLink("Details", "Details", new { id=item.ProductId },new {@class="btn btn-info"})
                        @Html.ActionLink("Delete", "DeleteProduct", new { id=item.ProductId }, new {@class="btn btn-danger", onclick="alert('Are you sure you want to delete this service by id - "+item.ProductId+"')"})
                    </td>
                </tr>
            }
        </tbody>
    }
</table>

@{
    int totalPages = ViewBag.PageNo;
    int currPage = ViewBag.CurrentPage;
    var nextDis = currPage >= totalPages ? "disabled" : "";
    var prevDis = currPage == 1 ? "disabled" : "";
}
<div class="d-flex justify-content-center">
<nav aria-label="Page navigation example">
    <ul class="pagination">
        <li class="page-item">
            <a class="page-link btn @prevDis" href="@Url.Action("Index","Admin",new {pageNo = currPage-1,search=ViewBag.Search})" aria-label="Previous">
                <span aria-hidden="true">&laquo;</span>
            </a>
        </li>
        @for (int i = 1; i <= totalPages; i++)
        {
            <li class="page-item"><a class="page-link" href="@Url.Action("Index","Admin",new {pageNo = i,search=ViewBag.Search})">@i</a></li>
        }

        <li class="page-item">
            <a class="page-link btn @nextDis" @ViewBag.Status href="@Url.Action("Index","Admin",new {pageNo = currPage+1,search=ViewBag.Search})" aria-label="Next">
                <span aria-hidden="true">&raquo;</span>
            </a>
        </li>
    </ul>
</nav>
</div>